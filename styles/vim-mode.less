@import "syntax-variables";
@import "ui-variables";

// Cursor style
// =========================
.block-cursor(@visibility: visible) {
  border: 0;
  background-color: @syntax-cursor-color;
  visibility: @visibility;
  opacity: 0.5;
}

.underline-cursor(@visibility: visible) {
  border: none;
  border-bottom: .3em solid @syntax-cursor-color;
  background: none;
  visibility: @visibility;
  opacity: 0.5;
}

.low-block-cursor(@visibility: visible) {
  border: none;
  border-bottom: .6em solid @syntax-cursor-color;
  background: none;
  visibility: @visibility;
  opacity: 0.5;
}

atom-text-editor.vim-mode.normal-mode,
atom-text-editor.vim-mode.operator-pending-mode,
atom-text-editor.vim-mode.visual-mode,
{
  &::shadow, // shadow-DOM enabled
  &           // shadow-DOM disabled
  {
    .cursor {
      .block-cursor(hidden);
    }
  }
}

atom-text-editor.vim-mode.normal-mode.is-focused,
atom-text-editor.vim-mode.operator-pending-mode.is-focused,
atom-text-editor.vim-mode.visual-mode.is-focused
{
  &::shadow, // shadow-DOM enabled
  &           // shadow-DOM disabled
  {
    .cursor {
      .block-cursor;
    }
  }
}

atom-text-editor.vim-mode.visual-mode
{
  &::shadow, // shadow-DOM enabled
  &           // shadow-DOM disabled
  {
    .cursor.hidden-cursor {
      display: block;
    }
  }
}

atom-text-editor.vim-mode.insert-mode.replace
{
  &::shadow, // shadow-DOM enabled
  &           // shadow-DOM disabled
  {
    .cursor {
      .underline-cursor(hidden);
    }
  }
}

atom-text-editor.vim-mode.insert-mode.replace.is-focused
{
  &::shadow, // shadow-DOM enabled
  &           // shadow-DOM disabled
  {
    .cursor {
      .underline-cursor;
    }

    .cursors.blink-off .cursor {
      .underline-cursor(hidden);
    }
  }
}

atom-text-editor.vim-mode.operator-pending-mode
{
  &::shadow, // shadow-DOM enabled
  &           // shadow-DOM disabled
  {
    .cursor {
      .low-block-cursor(hidden);
    }
  }
}

atom-text-editor.vim-mode.operator-pending-mode.is-focused
{
  &::shadow, // shadow-DOM enabled
  &           // shadow-DOM disabled
  {
    .cursor {
      .low-block-cursor;
    }

    .cursors.blink-off .cursor {
      .low-block-cursor(hidden);
    }
  }
}

// Show cursor in visualmode
atom-text-editor.vim-mode.visual-mode.characterwise:not(.reversed),
atom-text-editor.vim-mode.visual-mode.blockwise:not(.reversed), {
  &::shadow {
    .cursor {
      // Currently not well handling for multibyte char width
      // So to support multibyte, we need to dynamically calculate cursor width.
      // Need inmprove when uesr add cursor with cmd-click in visual charwise modeManager
      // it selectRight to sync selection state, this -1 affect cursor decoration for just
      // clicked position,,
      left: -1ch;
    }
  }
}

// Flash ranges e.g. flashing yanked range.
// =========================
atom-text-editor::shadow {
  .vim-mode-flash .region {
    background-color: @syntax-selection-flash-color;
  }
  .vim-mode-cursor-normal .region {
    background-color: @syntax-cursor-color;
    // background-color: @background-color-success;
    opacity: 0.8;
  }
  .vim-mode-cursor-insert .region {
    // [FIXME] I want i-bar style cursor for insert-mode.
    background-color: @syntax-cursor-color;
    opacity: 0.8;
  }
}

// Hover Counter
// =========================
.vim-mode-hover {
  color: @text-color-highlight;
  background-color: @base-background-color;
  border-radius: @component-border-radius;
  box-shadow: 0 0 10px @syntax-text-color;
  padding-left: 0.2em;
  padding-right: 0.2em;
  margin-left: -0.1em;
  text-align: center;
  &.first {
    background-color: @background-color-info;
  }
  &.last {
    background-color: @background-color-error;
  }
}

// Input mini editor, e.g surround char.
// =========================
.vim-mode-input atom-text-editor[mini] {
  background-color: inherit;
  border: none;
  width: 100%;
  height: 0px;
  font-weight: normal;
  color: @text-color;
  line-height: 1.28;
  cursor: default;
  white-space: nowrap;
  padding-left: 10px;
  &.is-focused {
    box-shadow: none;
  }
}

// Search
// =========================
// input
.vim-mode-search {
  display: flex;
  > div {
    padding: @component-padding/4; // @component-padding/2;
    border: none;
  }
  .options-container {
    padding: @component-padding/2 @component-padding;
    .btn {
      font-size: 1.0em;
    }
  }
  .editor-container {
    position: relative;
    padding: @component-padding/2 @component-padding;
    width: 100%;
    atom-text-editor[mini] {
      border: none;
      color: @text-color;
      cursor: default;
      &.is-focused {
        box-shadow: none;
      }
    }
  }
  atom-text-editor[mini]::before {
    font-size: 1.5em;
    padding-right: 0.5em;
    content: '/';
  }
  &.backwards atom-text-editor[mini]::before {
    font-size: 1.5em;
    padding-right: 0.5em;
    content: '?';
  }
}

// highlight
.vim-mode {
  &.round-box {
    box-sizing: border-box;
    border-radius: @component-border-radius;
  }
}
atom-text-editor::shadow {
  .vim-mode-search-match .region {
    .vim-mode.round-box;
    background-color: transparent;
    border: 2px solid @syntax-result-marker-color;
  }
  .vim-mode-search-match.first .region {
    border: 2px solid @syntax-color-renamed;
  }
  .vim-mode-search-match.last .region {
    border: 2px solid @syntax-color-removed;
  }
  .vim-mode-search-match.current .region {
    background-color: @syntax-selection-color;
  }
}
